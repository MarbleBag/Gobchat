<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Core.Util.ArchiveUnpacker.Complete" xml:space="preserve">
    <value>Unpacking complete</value>
  </data>
  <data name="Core.Util.ArchiveUnpacker.DeleteIncomplete" xml:space="preserve">
    <value>Delete partially unpacked archive</value>
  </data>
  <data name="Core.Util.ArchiveUnpackerHelper.Canceled" xml:space="preserve">
    <value>Unpacking cancelled</value>
  </data>
  <data name="Core.Util.ArchiveUnpackerHelper.Complete" xml:space="preserve">
    <value>Unpacking complete</value>
  </data>
  <data name="Core.Util.ArchiveUnpackerHelper.Unpack" xml:space="preserve">
    <value>Unpacking</value>
  </data>
  <data name="Core.Util.ArchiveUnpackerHelper.UnpackLog" xml:space="preserve">
    <value>Unpacking: {0}</value>
    <comment>0: uri</comment>
  </data>
  <data name="Core.Util.DownloadHelper.Canceled" xml:space="preserve">
    <value>Download cancelled</value>
  </data>
  <data name="Core.Util.DownloadHelper.Complete" xml:space="preserve">
    <value>Download complete</value>
  </data>
  <data name="Core.Util.DownloadHelper.Connecting" xml:space="preserve">
    <value>Connecting to {0}</value>
    <comment>0: uri</comment>
  </data>
  <data name="Core.Util.DownloadHelper.Download" xml:space="preserve">
    <value>Downloading: {0}</value>
    <comment>0: progress in %</comment>
  </data>
  <data name="Core.Util.DownloadHelper.Prepare" xml:space="preserve">
    <value>Prepare download</value>
  </data>
  <data name="Core.Util.DownloadHelper.Waiting" xml:space="preserve">
    <value>Waiting...</value>
  </data>
  <data name="GeneralErrorOccured" xml:space="preserve">
    <value>An error occured: {0}</value>
    <comment>0: error message</comment>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="GobIcon" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>resources\GobIcon.ico;System.Drawing.Icon, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="GobTrayIconOff" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>resources\GobTrayIconOff.Ico;System.Drawing.Icon, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="GobTrayIconOn" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>resources\GobTrayIconOn.Ico;System.Drawing.Icon, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="Module.Cef.Dialog.CefMissing.Text" xml:space="preserve">
    <value>CEF not found. Without Gobchat will not work.
Should it be downloaded and installed for Gobchat?</value>
  </data>
  <data name="Module.Cef.Dialog.InstallFailed.Text" xml:space="preserve">
    <value>CEF installation failed. Reason:
{0}

Retry or install CEF manually for gobchat.</value>
    <comment>0: error message</comment>
  </data>
  <data name="Module.Cef.Dialog.InstallFailed.Title" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="Module.Cef.Installer.Download.DeleteIncomplete" xml:space="preserve">
    <value>Delete partially downloaded cef archive: {0}</value>
    <comment>0: uri</comment>
  </data>
  <data name="Module.Cef.Installer.Unpack.Complete" xml:space="preserve">
    <value>Unpacking complete</value>
  </data>
  <data name="Module.Cef.Installer.Unpack.DeleteIncomplete" xml:space="preserve">
    <value>Delete partially unpacked CEF archive: {0}</value>
    <comment>0: uri</comment>
  </data>
  <data name="Module.Hotkey.ConfigHotkeyUpdater.InvalidHotkey" xml:space="preserve">
    <value>Invalid Hotkey for {0}: {1}</value>
    <comment>0: hotkey name, 1: error message</comment>
  </data>
  <data name="Module.Misc.Connection.AdminRights" xml:space="preserve">
    <value>Can't access FFXIV chatlog. Restart Gobchat with admin rights.</value>
  </data>
  <data name="Module.Misc.Connection.Found" xml:space="preserve">
    <value>FFXIV detected.</value>
  </data>
  <data name="Module.Misc.Connection.NotFound" xml:space="preserve">
    <value>Can't find a running instance of FFXIV.</value>
  </data>
  <data name="Module.Misc.Hotkey.ShowHide" xml:space="preserve">
    <value>Show &amp; Hide</value>
  </data>
  <data name="Module.NotifyIcon.UI.Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Module.NotifyIcon.UI.Hide" xml:space="preserve">
    <value>Hide</value>
  </data>
  <data name="Module.NotifyIcon.UI.Reload" xml:space="preserve">
    <value>Reload</value>
  </data>
  <data name="Module.NotifyIcon.UI.Show" xml:space="preserve">
    <value>Show</value>
  </data>
  <data name="Module.Updater.Dialog.DownloadFailed.Text" xml:space="preserve">
    <value>Unable to download newest version.
Reason: {0}</value>
    <comment>0: error message</comment>
  </data>
  <data name="Module.Updater.Dialog.DownloadFailed.Title" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="Module.Updater.Dialog.ExtractionFailed.Text" xml:space="preserve">
    <value>Unable to extract archive.
Reason: {0}</value>
    <comment>0: error message</comment>
  </data>
  <data name="Module.Updater.Dialog.ExtractionFailed.Title" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="Module.Updater.Dialog.ManualInstall.Text" xml:space="preserve">
    <value>Pressing Yes will close Gobchat and opens a webpage instead, which will provide the newest version for Gobchat.

Download gobchat-{0}.zip and overwrite your current Gobchat.</value>
    <comment>0: version</comment>
  </data>
  <data name="Module.Updater.Dialog.ManualInstall.Title" xml:space="preserve">
    <value>Manual installation</value>
  </data>
  <data name="Module.Updater.UI.Log.DeleteFile" xml:space="preserve">
    <value>Delete file: {0}</value>
    <comment>0: uri</comment>
  </data>
  <data name="Module.Updater.UI.Log.Done" xml:space="preserve">
    <value>Waiting for shutdown</value>
  </data>
  <data name="Module.Updater.UI.Log.PrepareUpdates" xml:space="preserve">
    <value>Prepare installation of update</value>
  </data>
  <data name="Module.Updater.UI.Log.UpdateCount" xml:space="preserve">
    <value>{0} updates for installation found.</value>
    <comment>0: number of updates</comment>
  </data>
</root>